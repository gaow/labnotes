#!/usr/bin/env python
import argparse
from gwlog.utils import getfname, pdflatex
from gwlog.gwlog2tex import LogToTex
from gwlog.gwlog2beamer import LogToBeamer

def getCommonArguments(parser):
	parser.add_argument('filename',
                        metavar = 'FN',
                        nargs = '+',
                        help='''name of the input log file(s)''')
	parser.add_argument('-a', '--author',
                        action='store',
                        default = '',
                        help='''author's name''')
	parser.add_argument('-t', '--title',
                        action='store',
                        default = '',
                        help='''title of document''')
	parser.add_argument('--full',
                        action='store_true',
                        default = '',
                        help='''make commented-out text visible in output file''')
	parser.add_argument('--notoc',
                        action='store_true',
                        default = '',
                        help='''do not generate table of contents''')
	parser.add_argument('-f', '--footnote',
                        action='store_true',
                        default = '',
                        help='''generate footnote instead of reference''')
	parser.add_argument('-o', '--output',
			metavar='name',
                        type=str,
                        help='''name of output pdf file''')
	parser.add_argument('-v', '--vanilla',
                        action='store_true',
                        default = '',
                        help='''build document from scratch without using cached data''')


def slides(args):
	return

def doc(args):
	tex = LogToTex(args.title, args.author, args.notoc, args.footnote, args.filename)
	lite = 0 if args.full else 1
	fname = getfname(args.filename, args.output)
	pdflatex(fname, tex.get(lite), vanilla=args.vanilla)
	return

if __name__ == '__main__':
	master_parser = argparse.ArgumentParser(
        description = '''Compile formatted log notes into pdf file''',
        prog = 'gw_log',
        fromfile_prefix_chars = '@',
        epilog = '''gw_log, motivated by documenting the workflow for the ESP6900 data analysis.
	Contact: Gao Wang <gaow@bcm.edu>''')
	master_parser.add_argument('--version', action='version', version='%(prog)s 1.0alpha')
	subparsers = master_parser.add_subparsers()
	# pdflatex commands
	parser = subparsers.add_parser('doc', help='Generate text document from log file(s)')
	getCommonArguments(parser)
	parser.set_defaults(func=doc)
	# beamer commands
	parser = subparsers.add_parser('slides', help='Generate slides from log file(s)')
	getCommonArguments(parser)
	parser.set_defaults(func=slides)
	# getting args
	args = master_parser.parse_args()
	# calling the associated functions
	args.func(args)
